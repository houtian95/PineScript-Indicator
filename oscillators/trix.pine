//@version=3
// Copyright (c) 2018-present, Alex Orekhov (everget)
// TRIX script may be freely distributed under the terms of GPL-3.0 license.
study("TRIX")

length = input(title="Length", type=integer, defval=14)
mult = input(title="TRIX Value Multiplier", type=integer, defval=1)
signalType = input(title="Signal Smoothing Type", defval="SMA", options=["EMA", "SMA"])
signalLength = input(title="Signal Smoothing Length", type=integer, defval=9)
src = input(title="Source", type=source, defval=close)
showSignal = input(title="Show Signal Line ?", type=bool, defval=true)
showHistogram = input(title="Show Histogram ?", type=bool, defval=false)
highlightCrossovers = input(title="Highlight TRIX/Signal Crossovers ?", type=bool, defval=true)
highlightZeroCrossovers = input(title="Highlight Zero Line Crossovers ?", type=bool, defval=false)
applyFilling = input(title="Apply Ribbon Filling ?", type=bool, defval=false)

triple = ema(ema(ema(src, length), length), length)

trix = mult * roc(triple, 1)
signal = signalType == "SMA" ? sma(trix, signalLength) : ema(trix, signalLength)

hist = trix - signal
histColor = hist >= 0 ? (hist[1] < hist ? #26A69A : #B2DFDB) : (hist[1] < hist ? #FFCDD2 : #EF5350)
plot(showHistogram ? hist : na, title="Histogram", style=columns, color=histColor, transp=0)
hline(0, title="Zero Level", linestyle=dotted)

trendColor = trix > signal ? #0ebb23 : red

trixColor = applyFilling ? trendColor : (trix > 0 ? #0ebb23 : red)
signalColor = applyFilling ? trendColor : #ff9800

trixPlot = plot(trix, title="TRIX", linewidth=2, color=trixColor, transp=0)
signalPlot = plot(showSignal ? signal : na, title="Signal", color=signalColor, transp=0)

transparent = color(white, 100)

fillColor = applyFilling ? trendColor : transparent
fill(trixPlot, signalPlot, color=fillColor, transp=70)

zeroCrossBgColor = highlightZeroCrossovers ? (trix > 0 ? green : red) : transparent
bgcolor(zeroCrossBgColor, transp=90)

plotshape(highlightCrossovers and crossover(trix, signal) ? trix : na, title="Crossover", location=location.absolute, style=shape.circle, size=size.tiny, color=green, transp=0)
plotshape(highlightCrossovers and crossunder(trix, signal) ? trix : na, title="Crossunder", location=location.absolute, style=shape.circle, size=size.tiny, color=red, transp=0)
