//@version=4
// Copyright (c) 2018-present, Alex Orekhov (everget)
// Recursive Median Filter script may be freely distributed under the terms of the GPL-3.0 license.
study("Recursive Median Filter", shorttitle="RMF", overlay=true)

medianLength = input(title="Median Length", type=input.integer, defval=5, minval=1)
lowpassLength = input(title="Lowpass Length", type=input.integer, defval=12, minval=1)
src = input(title="Source", type=input.source, defval=close)
highlight = input(title="Highlight ?", type=input.bool, defval=true)

_median(src, length) =>
	percentile_nearest_rank(src, length, 50)

PI = 2 * asin(1)

alphaArg = 2 * PI / lowpassLength
cos = cos(alphaArg)

alpha = 0.0
alpha := cos != 0 ? (cos + sin(alphaArg) - 1) / cos : nz(alpha[1])

rmf = 0.0
rmf := alpha * _median(src, medianLength) + (1 - alpha) * nz(rmf[1])

rmfColor = highlight ? rmf > rmf[1] ? color.green : color.red : #6d1e7f
plot(rmf, title="RMF", linewidth=2, color=rmfColor, transp=0)
